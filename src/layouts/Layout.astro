---
import Header from "../components/elements/Header.astro"
import Footer from "../components/elements/Footer.astro"
interface Props {
	title: string
}

const { title } = Astro.props
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" sizes="any" />

		<meta property="og:title" content="Lucas Zarandón" />
		<meta
			property="og:description"
			content="Enseño a programar - Desarrollador Web FrontEnd - Base de datos - Innovador - Videojuegos"
		/>
		<meta
			property="og:image"
			content="https://raw.githubusercontent.com/lucaszhh/my-portfolio/main/public/icon.webp"
		/>
		<meta property="og:url" content="https://lucaszarandon.vercel.app/" />
		<meta property="og:type" content="website" />
		<title>{title}</title>
	</head>
	<body>
        <section class=' bg-white text-black dark:bg-black dark:text-white transition'>
            <section class=' text-black  dark:text-white mx-auto sm:w-4/5 p-4 max-w-screen-xl'>
                <Header />
                <slot/>
				<Footer/>
            </section>
        </section>
	</body>
</html>

<script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]",
    ) as HTMLButtonElement

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark")
    } else {
      document.documentElement.classList.remove("dark")
    }
    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault()
        const doc = document.documentElement
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark")
              localStorage.setItem("appTheme", "dark")
            } else {
              document.documentElement.classList.remove("dark")
              localStorage.setItem("appTheme", "light")
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark")
              localStorage.setItem("appTheme", "light")
            } else {
              doc.classList.add("dark")
              localStorage.setItem("appTheme", "dark")
            }
          }
        }
      })
    }
  </script>

<style is:global>

	:root {
		--foreground-rgb: 0, 0, 0;
		--background-start-rgb: 214, 219, 220;
		--background-end-rgb: 255, 255, 255;
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--foreground-rgb: 255, 255, 255;
			--background-start-rgb: 0, 0, 0;
			--background-end-rgb: 0, 0, 0;
		}
	}

	body {
		color: rgb(var(--foreground-rgb));
		background: linear-gradient(
				to bottom,
				transparent,
				rgb(var(--background-end-rgb))
			)
			rgb(var(--background-start-rgb));
	}

	.bg {
		width: 100%;
		height: 100%;
		background-color: white;
		background: radial-gradient(125% 125% at 50% 10%, #fff 40%, #63e 100%);
	}
	.dark .bg {
		width: 100%;
		height: 100%;
		background-color: rgba(114, 114, 114, 0.3);
		background: radial-gradient(125% 125% at 50% 10%, #000 40%, #63e 100%);
	}

	.bgHero{
		background: 
		radial-gradient(125% 125% at 50% 10%, #ffffff00 40%, rgba(101, 51, 238, 0.494) 100%), 
		url(/me.png) no-repeat bottom right;
		background-size: contain;
	}

	.dark .bgHero{
		background: 
		radial-gradient(125% 125% at 50% 10%, #00000000 40%, rgba(101, 51, 238, 0.494) 100%), 
		url(/me.png) no-repeat bottom right;
		background-size: contain;
	}


</style>
